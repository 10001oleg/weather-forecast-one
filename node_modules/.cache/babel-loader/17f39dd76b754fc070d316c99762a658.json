{"ast":null,"code":"import _classCallCheck from \"/Users/10001oleg/1proj/2222/weather-forecast-one/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/10001oleg/1proj/2222/weather-forecast-one/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/10001oleg/1proj/2222/weather-forecast-one/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/10001oleg/1proj/2222/weather-forecast-one/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/10001oleg/1proj/2222/weather-forecast-one/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/10001oleg/1proj/2222/weather-forecast-one/src/containers/weather/index.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchWeather } from \"../../actions\";\nimport CurrentWeather from \"../../components/currentWeather\";\nimport \"./Weather.css\";\n\nvar Weather =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Weather, _Component);\n\n  function Weather() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Weather);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Weather)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderLoading = function () {\n      return React.createElement(\"div\", {\n        className: \"container center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Loading...\");\n    };\n\n    _this.renderWeather = function () {\n      var _this$props = _this.props,\n          city = _this$props.city,\n          data = _this$props.data;\n      return React.createElement(\"div\", {\n        className: \"container center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, city), React.createElement(CurrentWeather, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    };\n\n    _this.shouldRenderWeather = function () {\n      if (_this.props.isFetching || !_this.props.data) {\n        return _this.renderLoading();\n      } else {\n        return _this.renderWeather();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Weather, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchWeather();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.shouldRenderWeather();\n    }\n  }]);\n\n  return Weather;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isFetching: state.weather.isFetching,\n    data: state.weather.data,\n    city: state.weather.city\n  };\n};\n\nWeather.propTypes = {\n  isFetching: PropTypes.bool.isRequired,\n  data: PropTypes.object,\n  city: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  fetchWeather: fetchWeather\n})(Weather);","map":{"version":3,"sources":["/Users/10001oleg/1proj/2222/weather-forecast-one/src/containers/weather/index.js"],"names":["React","Component","PropTypes","connect","fetchWeather","CurrentWeather","Weather","renderLoading","renderWeather","props","city","data","shouldRenderWeather","isFetching","mapStateToProps","state","weather","propTypes","bool","isRequired","object","string"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAO,eAAP;;IAEMC,O;;;;;;;;;;;;;;;;;;UAKJC,a,GAAgB,YAAM;AACpB,aAAO;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,K;;UAEDC,a,GAAgB,YAAM;AAAA,wBACG,MAAKC,KADR;AAAA,UACZC,IADY,eACZA,IADY;AAAA,UACNC,IADM,eACNA,IADM;AAEpB,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAL,CADF,EAEE,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAEC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD,K;;UAEDC,mB,GAAsB,YAAM;AAC1B,UAAI,MAAKH,KAAL,CAAWI,UAAX,IAAyB,CAAC,MAAKJ,KAAL,CAAWE,IAAzC,EAA+C;AAC7C,eAAO,MAAKJ,aAAL,EAAP;AACD,OAFD,MAEO;AACL,eAAO,MAAKC,aAAL,EAAP;AACD;AACF,K;;;;;;;wCAxBmB;AAClB,WAAKC,KAAL,CAAWL,YAAX;AACD;;;6BAwBQ;AACP,aAAO,KAAKQ,mBAAL,EAAP;AACD;;;;EA7BmBX,S;;AAgCtB,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLF,IAAAA,UAAU,EAAEE,KAAK,CAACC,OAAN,CAAcH,UADrB;AAELF,IAAAA,IAAI,EAAEI,KAAK,CAACC,OAAN,CAAcL,IAFf;AAGLD,IAAAA,IAAI,EAAEK,KAAK,CAACC,OAAN,CAAcN;AAHf,GAAP;AAKD,CAND;;AAQAJ,OAAO,CAACW,SAAR,GAAoB;AAClBJ,EAAAA,UAAU,EAAEX,SAAS,CAACgB,IAAV,CAAeC,UADT;AAElBR,EAAAA,IAAI,EAAET,SAAS,CAACkB,MAFE;AAGlBV,EAAAA,IAAI,EAAER,SAAS,CAACmB;AAHE,CAApB;AAMA,eAAelB,OAAO,CACpBW,eADoB,EAEpB;AAAEV,EAAAA,YAAY,EAAZA;AAAF,CAFoB,CAAP,CAGbE,OAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchWeather } from \"../../actions\";\nimport CurrentWeather from \"../../components/currentWeather\";\nimport \"./Weather.css\";\n\nclass Weather extends Component {\n  componentDidMount() {\n    this.props.fetchWeather();\n  }\n\n  renderLoading = () => {\n    return <div className=\"container center\">Loading...</div>;\n  };\n\n  renderWeather = () => {\n    const { city, data } = this.props;\n    return (\n      <div className=\"container center\">\n        <h1>{city}</h1>\n        <CurrentWeather data={data} />\n      </div>\n    );\n  };\n\n  shouldRenderWeather = () => {\n    if (this.props.isFetching || !this.props.data) {\n      return this.renderLoading();\n    } else {\n      return this.renderWeather();\n    }\n  };\n\n  render() {\n    return this.shouldRenderWeather();\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isFetching: state.weather.isFetching,\n    data: state.weather.data,\n    city: state.weather.city\n  };\n};\n\nWeather.propTypes = {\n  isFetching: PropTypes.bool.isRequired,\n  data: PropTypes.object,\n  city: PropTypes.string\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchWeather }\n)(Weather);\n"]},"metadata":{},"sourceType":"module"}