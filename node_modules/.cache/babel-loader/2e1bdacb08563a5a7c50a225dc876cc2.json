{"ast":null,"code":"import _objectSpread from \"/Users/10001oleg/1proj/2222/weather-forecast-one/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as types from \"../actions/actionTypes.js\";\nvar initialState = {\n  isFetching: false,\n  data: null,\n  city: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.REQUEST_WEATHER:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case types.RECEIVE_WEATHER:\n      var newState = _objectSpread({}, state, {\n        isFetching: false,\n        data: action.payload,\n        city: action.payload.name\n      });\n\n      return newState;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/10001oleg/1proj/2222/weather-forecast-one/src/reducers/weatherReducer.js"],"names":["types","initialState","isFetching","data","city","state","action","type","REQUEST_WEATHER","RECEIVE_WEATHER","newState","payload","name"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAAnB;AAMA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,KAAK,CAACQ,eAAX;AACE,+BAAYH,KAAZ;AAAmBH,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKF,KAAK,CAACS,eAAX;AACE,UAAMC,QAAQ,qBACTL,KADS;AAEZH,QAAAA,UAAU,EAAE,KAFA;AAGZC,QAAAA,IAAI,EAAEG,MAAM,CAACK,OAHD;AAIZP,QAAAA,IAAI,EAAEE,MAAM,CAACK,OAAP,CAAeC;AAJT,QAAd;;AAMA,aAAOF,QAAP;;AACF;AACE,aAAOL,KAAP;AAZJ;AAcD,CAfD","sourcesContent":["import * as types from \"../actions/actionTypes.js\";\n\nvar initialState = {\n  isFetching: false,\n  data: null,\n  city: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.REQUEST_WEATHER:\n      return { ...state, isFetching: true };\n    case types.RECEIVE_WEATHER:\n      const newState = {\n        ...state,\n        isFetching: false,\n        data: action.payload,\n        city: action.payload.name\n      };\n      return newState;\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}